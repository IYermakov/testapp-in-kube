apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app: prometheus
  name: prometheus
  namespace: {{ .Values.nameSpace }}
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
    spec:
      containers:
      - image: prom/prometheus:v2.5.0
        imagePullPolicy: IfNotPresent
        name: prometheus-test
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server-conf
        name: config-volume
      serviceAccountName: {{ .Values.nameSpace }}-service-account
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
  name: prom-svc
  namespace: {{ .Values.nameSpace }}
spec:
  ports:
  - name: http
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
kind: ConfigMap
metadata:
  labels:
    name: prometheus-server-conf
  name: prometheus-server-conf
  namespace: {{ .Values.nameSpace }}
---
apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      ingress.bluemix.net/rewrite-path: serviceName=prom-svc rewrite=/
      ingress.bluemix.net/redirect-to-https: "True"
    name: prom-ingress
    namespace: {{ .Values.nameSpace }}
  spec:
    rules:
    - host: {{ .Values.hostName }}
      http:
        paths:
        - backend:
            serviceName: prom-svc
            servicePort: 9090
          path: /
    tls:
    - secretName: devcluster
      hosts:
        - {{ .Values.hostName }}
kind: List
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Values.nameSpace }}
  name: {{ .Values.nameSpace }}-service-account
imagePullSecrets:
  - name: bluemix-default-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prom-test-cluster-role
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prom-test-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: {{ .Values.nameSpace }}-service-account
    namespace: {{ .Values.nameSpace }}
roleRef:
  kind: ClusterRole
  name: prom-test-cluster-role
  apiGroup: rbac.authorization.k8s.io

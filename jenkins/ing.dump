apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/psp: ibm-privileged-psp
    prometheus.io/port: "10254"
    prometheus.io/scrape: "true"
  creationTimestamp: "2019-04-17T08:10:07Z"
  generateName: nginx-ingress-controller-7c78885997-
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    pod-template-hash: 7c78885997
  name: nginx-ingress-controller-7c78885997-9xvxn
  namespace: ingress-nginx
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: nginx-ingress-controller-7c78885997
    uid: 0554e5d0-60e8-11e9-9d6f-366731af7a8b
  resourceVersion: "216545"
  selfLink: /api/v1/namespaces/ingress-nginx/pods/nginx-ingress-controller-7c78885997-9xvxn
  uid: 3692ef57-60e8-11e9-9d6f-366731af7a8b
spec:
  containers:
  - args:
    - /nginx-ingress-controller
    - --configmap=$(POD_NAMESPACE)/nginx-configuration
    - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
    - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
    - --publish-service=$(POD_NAMESPACE)/ingress-nginx
    - --annotations-prefix=nginx.ingress.kubernetes.io
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    name: nginx-ingress-controller
    ports:
    - containerPort: 80
      hostPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      procMount: Default
      runAsUser: 33
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: nginx-ingress-serviceaccount-token-lh4m9
      readOnly: true
  dnsPolicy: ClusterFirst
  nodeName: 10.144.187.52
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: nginx-ingress-serviceaccount
  serviceAccountName: nginx-ingress-serviceaccount
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: nginx-ingress-serviceaccount-token-lh4m9
    secret:
      defaultMode: 420
      secretName: nginx-ingress-serviceaccount-token-lh4m9
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2019-04-17T08:10:31Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2019-04-17T08:10:38Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2019-04-17T08:10:38Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2019-04-17T08:10:31Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://686a4c0e0414b226b9e89c5b6266acc3a59e1aed056da49fb6006e1c74fcb91c
    image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1
    imageID: sha256:ecf51f222a1600d9a2f12b3d3719268f841cf44529ad0591c40984c383f2ea9d
    lastState: {}
    name: nginx-ingress-controller
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: "2019-04-17T08:10:32Z"
  hostIP: 10.144.187.52
  phase: Running
  podIP: 172.30.195.146
  qosClass: BestEffort
  startTime: "2019-04-17T08:10:31Z"
